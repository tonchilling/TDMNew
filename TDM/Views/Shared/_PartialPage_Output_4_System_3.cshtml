<style>

     #header ul{
         margin-top :6px;
     }
     #header ul li{
         display:inline;
     }

</style>

@section Scripts {
    @Scripts.Render("~/Scripts/AreaAnalysis/Index.js")
}
 

@{

    Html.RenderPartial("~/Views/TraceProgress/_TraceProgressOverview.cshtml");
    //Html.RenderPartial("~/Views/TraceProgress/_TraceProgressCountry.cshtml");
}
 

<script type="text/javascript">
    var iframeElement_Main = document.getElementById('tdmapMain');
    iframeElement_Main.src = config.mapUrl; //window.document.location.origin + '/TD2';
    gisIframeWindow_Main = null;
    iframeElement_Main.onload = function () {
        gisIframeWindow_Main = iframeElement_Main.contentWindow;
    }
    gIdGlobal = null;


    function chartPie1Onlcike() {
        var url = window.location.href;
        url = url.replace('/Home/System_3_with_Layout', '');
        gy = url.split("?");
        cusparameter = gy[0];

        var objectPage = { page: '_Charts', value: '', valuename: 'การประเมินราคาที่ดิน' };
        objectPageList = [];
        objectPageList.push(objectPage);
        objectPageListOnchange();

        $('#PartialView').load(cusparameter + "/Shared/GetPageRegion");
        $('#divtdmapMain').show();
        $('#divtdmapMain').css('display', 'block');
    }

    //=========================== MAP =============================

    function zoomRegion(Region) {
        //http.get("/api/TraceProgress/GetRegionShapeBy", { code: Region }, function (data) {
        //console.log('data GetRegionShapeBy ==>', data);
        //clear();
        //drawCity(data.SHAPE);
        //});
    }

    function zoomProc(Province) {
        http.get("/api/Address/GetProvinceShapeBy", { code: Province }, function (data) {
            clear();
            drawCity(data.SHAPE);
        });
    }

    function zoomProcNotClear(Province,status) {
        http.get("/api/Address/GetProvinceShapeBy", { code: Province }, function (data) {
            if (status == 'Late') {
                drawCity_Late(data.SHAPE);
            }
            else if (status == 'Progress') {
                drawCity_Progress(data.SHAPE);
            }
            else if (status == 'Complete') {
                drawCity_Complete(data.SHAPE);
            }
            else {
                drawCity(data.SHAPE);
            }
        });
    }

    function zoomDistrictNotClear(District, status) {
        http.get("/api/Address/GetAmphoeShapeBy", { code: District }, function (data) {
            if (status == 'Late') {
                drawCity_Late(data.SHAPE);
            }
            else if (status == 'Progress') {
                drawCity_Progress(data.SHAPE);
            }
            else if (status == 'Complete') {
                drawCity_Complete(data.SHAPE);
            }
            else {
                drawCity(data.SHAPE);
            }
        });
    }

    function zoomDistrict(District) {
        http.get("/api/Address/GetAmphoeShapeBy", { code: District }, function (data) {
            clear();
            drawCity(data.SHAPE);
        });
    }

    function zoomTambonNotClear(Tambol, status) {
        http.get("/api/Address/GetTambolShapeBy", { code: Tambol }, function (data) {
            if (status == 'Late') {
                drawCity_Late(data.SHAPE);
            }
            else if (status == 'Progress') {
                drawCity_Progress(data.SHAPE);
            }
            else if (status == 'Complete') {
                drawCity_Complete(data.SHAPE);
            }
            else {
                drawCity(data.SHAPE);
            }
        });
    }

    function zoomTambol(Tambol) {
        http.get("/api/Address/GetTambolShapeBy", { code: Tambol }, function (data) {
            clear();
            drawCity(data.SHAPE);
        });
    }

    function clear() {
        gisIframeWindow_Main.GIS.removeGraphic();
    }

    function drawCity(shape) {
        shapes = {};

        var symbol = {
            "type": "esriSFS",
            "style": "esriSFSSolid",
            "color": [0, 0, 0, 20],
            "outline": {
                "type": "esriSLS",
                "style": "esriSLSSolid",
                "color": [0, 0, 0, 255],
                "width": 2
            }
        };
        drawShape(shape, symbol);
    }



    function drawCity_Late(shape) {
        shapes = {};

        var symbol2 = {
            "type": "esriSFS",
            "style": "esriSFSSolid",
            "color": [0, 0, 0, 20],
            "outline": {
                "type": "esriSLS",
                "style": "esriSLSSolid",
                "color": [255, 0, 0, 255],
                "width": 2
            }
        };
        var symbol = {
            "type": "esriSFS", "style": "esriSFSSolid", "color": [255, 0, 0, 150],
            "outline": { "type": "esriSLS", "style": "esriSLSSolid", "color": [255, 0, 0, 255], "width": 1 }
        }

        drawShape(shape, symbol);
    }


    function drawCity_Progress(shape) {
        shapes = {};

        var symbol2 = {
            "type": "esriSFS",
            "style": "esriSFSSolid",
            "color": [0, 0, 0, 20],
            "outline": {
                "type": "esriSLS",
                "style": "esriSLSSolid",
                "color": [173, 255, 47, 255],
                "width": 2
            }
        };

        var symbol = {
            "type": "esriSFS", "style": "esriSFSSolid", "color": [255, 192, 0, 150],
            "outline": { "type": "esriSLS", "style": "esriSLSSolid", "color": [255, 192, 0, 255], "width": 1 }
        }
        drawShape(shape, symbol);
    }

    function drawCity_Complete(shape){
        shapes = {};

        var symbol2 = {
            "type": "esriSFS",
            "style": "esriSFSSolid",
            "color": [0, 0, 0, 20],
            "outline": {
                "type": "esriSLS",
                "style": "esriSLSSolid",
                "color": [0, 128, 0, 255],
                "width": 2
            }
        };

        var symbol = {
            "type": "esriSFS", "style": "esriSFSSolid", "color": [112, 173, 71, 190],
            "outline": { "type": "esriSLS", "style": "esriSLSSolid", "color": [112, 173, 71, 255], "width": 1 }
        }
        drawShape(shape, symbol);
    }




    function drawShape(shape, symbol) {
        if (shape) {
            addGraphic(shape.split(';')[1], symbol);
        }
    }

    function addGraphic(shape, symbol) {
        var sridIn = 32647;
        var sridOut = [102100];
        var trans = gisIframeWindow_Main.GIS.transform(shape, sridIn, sridOut);

        symbol = symbol || {
            "type": "esriSLS",
            "style": "esriSLSSolid",
            "color": [0, 0, 0, 255],
            "width": 1
        }

        return gisIframeWindow_Main.GIS.addGraphic(trans[0].shape, 102100, symbol);
    }

</script>

</form>
